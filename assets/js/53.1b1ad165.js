(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{206:function(v,e,i){"use strict";i.r(e);var l={props:["slot-key"],mounted:function(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},n=i(5),t=Object(n.a)(l,function(){var v=this,e=v.$createElement,i=v._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":v.slotKey}},[i("h1",{attrs:{id:"mvn-常用命令"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#mvn-常用命令","aria-hidden":"true"}},[v._v("#")]),v._v(" mvn 常用命令")]),v._v(" "),i("ul",[i("li",[v._v("mvn -version/-v 查看版本信息")]),v._v(" "),i("li",[v._v("mvn archetype:create -DgroupId=com.oreilly -DartifactId=my-app 创建 mvn 项目")]),v._v(" "),i("li",[v._v("mvn package 生成 target 目录，编译、测试代码，生成测试报告，生成 jar/war 文件")]),v._v(" "),i("li",[v._v("mvn jetty:run 运行项目于 jetty 上")]),v._v(" "),i("li",[v._v("mvn -e 显示详细错误 信息")]),v._v(" "),i("li",[v._v("mvn validate 验证工程是否正确，所有需要的资源是否可用")]),v._v(" "),i("li",[v._v("mvn integration-test 在集成测试可以运行的环境中处理和发布包")]),v._v(" "),i("li",[v._v("mvn verify 运行任何检查，验证包是否有效且达到质量标准")]),v._v(" "),i("li",[v._v("mvn generate-sources 产生应用需要的任何额外的源代码，如 xdoclet")]),v._v(" "),i("li",[v._v("mvn help:describe -Dplugin=help")])]),v._v(" "),i("hr"),v._v(" "),i("ul",[i("li",[i("p",[v._v("mvn compile")])]),v._v(" "),i("li",[i("p",[v._v("mvn test-compile")])]),v._v(" "),i("li",[i("p",[v._v("mvn test")])]),v._v(" "),i("li",[i("p",[v._v("mvn site 生成 site")])]),v._v(" "),i("li",[i("p",[v._v("mvn package")])]),v._v(" "),i("li",[i("p",[v._v("mvn install")])]),v._v(" "),i("li",[i("p",[v._v("mvn eclipse:eclipse 生成 eclipse 项目")])]),v._v(" "),i("li",[i("p",[v._v("mvn idea:idea 生成 idea 项目")])]),v._v(" "),i("li",[i("p",[v._v("mvn -Dtest package 只打包不测试")])]),v._v(" "),i("li",[i("p",[v._v("mvn test-compile 编译测试的内容")])]),v._v(" "),i("li",[i("p",[v._v("mvn jar:jar 只打 jar")])]),v._v(" "),i("li",[i("p",[v._v("mvn test -skipping compile -skipping test-compile 只测试，不编译")])]),v._v(" "),i("li",[i("p",[v._v("mvn eclipse:clean  清楚 eclipse 的系统设置")])]),v._v(" "),i("li",[i("p",[v._v("mvn dependency:list 查看当前项目已被解析的依赖")])]),v._v(" "),i("li",[i("p",[v._v("mvn deploy")])]),v._v(" "),i("li",[i("p",[v._v("mvn clean install-U 强制检查更新，由于快照版本的更新策略(一天更新几次、隔段时间更新一次)存在，如果想强制更新就会用到此命令")])]),v._v(" "),i("li",[i("p",[v._v("mvn source:jar 或 mvn source:jar-no-fork 源码打包")])]),v._v(" "),i("li",[i("p",[v._v("mvn compile 与 mvn install、mvn deploy 的区别")]),v._v(" "),i("ul",[i("li",[v._v("mvn compile，编译类文件")]),v._v(" "),i("li",[v._v("mvn install，包含 mvn compile，mvn package，然后上传到本地仓库")]),v._v(" "),i("li",[v._v("mvn deploy,包含 mvn install,然后，上传到私服")])])])]),v._v(" "),i("ul",[i("li",[v._v("一般使用情况是这样，首先通过 cvs 或 svn 下载代码到本机，然后执行 mvn eclipse:eclipse 生成 ecllipse 项目文件，然后导入到 eclipse 就行了；修改代码后执行 mvn compile 或 mvn test 检验，也可以下载 eclipse 的 maven 插件.")])])])},[],!1,null,null,null);t.options.__file="maven.md";e.default=t.exports}}]);