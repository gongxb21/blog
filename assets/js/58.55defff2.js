(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{190:function(e,t,i){"use strict";i.r(t);var s={props:["slot-key"],mounted:function(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},n=i(5),o=Object(n.a)(s,function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.slotKey}},[i("h1",{attrs:{id:"set-命令"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#set-命令","aria-hidden":"true"}},[e._v("#")]),e._v(" Set 命令")]),e._v(" "),i("p",[e._v("Redis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据。\nRedis 中集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。")]),e._v(" "),i("ol",[i("li",[e._v("sadd key value [value2] ;往集合中添加元素")]),e._v(" "),i("li",[e._v("scard key 获取集合的个数")]),e._v(" "),i("li",[e._v("sdiff key [key2]返回两个集合的差集")]),e._v(" "),i("li",[e._v("sdiffstore des key [key2] 返回两个集合的差集并返回到 des 集合中")]),e._v(" "),i("li",[e._v("sinter key [key2]返回两个集合的交集")]),e._v(" "),i("li",[e._v("SINTERSTORE destination key1 [key2] 返回给定所有集合的交集并存储在 destination 中")]),e._v(" "),i("li",[e._v("SISMEMBER key member 判断 member 元素是否是集合 key 的成员")]),e._v(" "),i("li",[e._v("smembers key 返回集合的元素")]),e._v(" "),i("li",[e._v("SMOVE source destination member 将 member 元素从 source 集合移动到 destination 集合")]),e._v(" "),i("li",[e._v("SPOP key 移除并返回集合中的一个随机元素")]),e._v(" "),i("li",[e._v("SRANDMEMBER key [count]  返回集合中一个或多个随机数")]),e._v(" "),i("li",[e._v("SUNION key1 [key2] 返回所有给定集合的并集")]),e._v(" "),i("li",[e._v("SUNIONSTORE destination key1 [key2]  所有给定集合的并集存储在 destination 集合中")]),e._v(" "),i("li",[e._v("SSCAN key cursor [MATCH pattern][count count] 迭代集合中的元素")])])])},[],!1,null,null,null);o.options.__file="redis_set.md";t.default=o.exports}}]);