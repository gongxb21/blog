(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{192:function(n,s,t){"use strict";t.r(s);var e={props:["slot-key"],mounted:function(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},a=t(5),r=Object(a.a)(e,function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.slotKey}},[t("h1",{attrs:{id:"jenkins-自动化中遇到的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jenkins-自动化中遇到的问题","aria-hidden":"true"}},[n._v("#")]),n._v(" Jenkins 自动化中遇到的问题")]),n._v(" "),t("h2",{attrs:{id:"已解决"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#已解决","aria-hidden":"true"}},[n._v("#")]),n._v(" 已解决")]),n._v(" "),t("ol",[t("li",[t("p",[t("strong",[n._v("【已解决】")]),n._v(" 关于配置构建后的邮件提醒，主要的坑有两个：")]),n._v(" "),t("ol",[t("li",[n._v("邮箱的密码，不是邮箱的登录密码，而是邮箱在申请 pop/smtp 服务之后，得到的一个授权码；")]),n._v(" "),t("li",[n._v("邮箱必须要和 jenkins 的管理员邮箱一致。这个点真的困扰我很久，但是在搞定之后，好像一切又是那么的合情合理。")])])]),n._v(" "),t("li",[t("p",[t("strong",[n._v("【已解决】")]),n._v(" 在构建 maven 项目的时候，不支持 Java8 中的 lambda 表达式。")]),n._v(" "),t("p",[n._v("这个点也困扰了我很久。一开始我以为是我没有在 Jenkins 中配置 jdk 的原因，我在 Jenkins 配置了各种 jdk 始终不能解决这个问题。后来，怀疑是代码的 pom 文件中没有添加编译的插件导致，我在 pom 后面添加了支持的 java8 的插件还是不可以。后来把编译插件的版本降了几个，"),t("em",[n._v("降了几个，降了几个")]),n._v(" ，居然又可以了。编译插件如下：")])])]),n._v(" "),t("div",{staticClass:"language-java(maven) line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("<build>\n    <plugins>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <version>2.3.2</version>\n            <configuration>\n                <source>1.8</source>\n                <target>1.8</target>\n            </configuration>\n        </plugin>\n    </plugins>\n</build>\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[t("p",[t("strong",[n._v("【已解决】")]),n._v(" Jenkins 构建报错")]),n._v(" "),t("p",[t("strong",[n._v("/var/jenkins_home/workspace/test_test/src/test/java/com/sayyoo/auto/autotest/SubLetContractTest.java:[206,18] error: cannot find symbol")]),n._v("\n    通过对比发现是因为在这个类中使用了 Lombok 注解，导致 maven 编译报错，从而导致 mvn compiler 的时候报错。有两种方法结局：")]),n._v(" "),t("ol",[t("li",[n._v("不再使用@Getter 和@Setter 注解，通过 IDE 的快捷键生成相关的 getter 和 setter 方法；但是这个方法很愚蠢，因为 Lombok 的注解 \b 就是为了开放方便。")])]),n._v(" "),t("p",[n._v("2.（推荐）提高 maven-compiler-plugin 的版本")])])]),n._v(" "),t("div",{staticClass:"language-java(maven) line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("<build>\n    <plugins>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <version>3.7.0</version>\n            <configuration>\n                <source>1.8</source>\n                <target>1.8</target>\n            </configuration>\n        </plugin>\n    </plugins>\n</build>\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br")])]),t("h2",{attrs:{id:"未解决"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#未解决","aria-hidden":"true"}},[n._v("#")]),n._v(" 未解决")]),n._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[t("strong",[n._v("【未解决】")]),n._v(" 运行在 Docker 中的 Jenkins，怎么配置测试报告，配置的路径始终找不到，会报 404 错误。")])]),n._v(" "),t("p",[n._v("我觉这个问题其实也 \b 不难解决，主要问题在于自己在 \bdocker 运行 jenkins 的时候，没有挂载 docker 目录到宿主机上，导致自己设置的 \b 目录是宿主机的目录 \b，但是 \bjenkins 运行在 \bdocker 中。所以注意在"),t("router-link",{attrs:{to:"./jenkins.html"}},[n._v("安装")]),n._v("的时候，就要把文件挂载好。")],1),n._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[t("p",[t("strong",[n._v("【未解决】")]),n._v(" 为什么要用 Jenkins 执行自动化测试案例？")]),n._v(" "),t("p",[n._v("我对 Jenkins 构建的理解是持续集成，持续交付。我觉得不应该用来做自动化测试，因为自动化测试的项目不需要打包。即使在 Jenkins 构建项目的时候，会执行测试用例也只是因为这是 maven 项目的特性，在执行 mvn  install 的时候，会自动执行 mvn test。正是因为 mvn test 这个命令才导致 Jenkins 去执行了我们的自动化测试。我觉得自己没有把 Jenkins 用在正途上，只是用了 Jenkins 的小功能，比如邮件提醒和可以配置的执行频率。")])])]),n._v(" "),t("p",[n._v("有了 Jenkins，可以不需要通过命令行手动去执行 mvn test 命令，可以对所有用例的执行结果和输出的日志有很好的展示。希望过几天再回头看的时候，会认为自己现在的想法是错误的。")]),n._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[n._v("#")]),n._v(" 参考")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://blog.csdn.net/gxb2260/article/details/80934351",target:"_blank",rel:"noopener noreferrer"}},[n._v("按不坏的 Ctrl 的博客"),t("OutboundLink")],1)]),n._v(" "),t("li",[t("router-link",{attrs:{to:"./jenkins_mail.html"}},[n._v("配置通知邮件")])],1),n._v(" "),t("li",[t("router-link",{attrs:{to:"./jenkins_setup.html"}},[n._v("jenkins 配置")])],1),n._v(" "),t("li",[t("router-link",{attrs:{to:"./jenkins.html"}},[n._v("docker 安装 \bjenkins")])],1)])])},[],!1,null,null,null);r.options.__file="jenkins_summary.md";s.default=r.exports}}]);